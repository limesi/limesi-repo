<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ecoding.limesiauth.mapper.TBUserMapper">
  <resultMap id="BaseResultMap" type="org.ecoding.limesiauth.entity.po.TBUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="phone_prefix" jdbcType="INTEGER" property="phonePrefix" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="domicile _location" jdbcType="VARCHAR" property="domicileLocation" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, realname, nickname, loginname, password, phone, phone_prefix, address, `domicile _location`, 
    sex, department_id, enable, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="org.ecoding.limesiauth.entity.po.TBUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_b_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_b_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_b_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.ecoding.limesiauth.entity.po.TBUserExample">
    delete from t_b_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ecoding.limesiauth.entity.po.TBUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_b_user (realname, nickname, loginname, 
      password, phone, phone_prefix, 
      address, `domicile _location`, sex, 
      department_id, enable, create_time, 
      update_time)
    values (#{realname,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{phonePrefix,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{domicileLocation,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, 
      #{departmentId,jdbcType=INTEGER}, #{enable,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.ecoding.limesiauth.entity.po.TBUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_b_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="realname != null">
        realname,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="loginname != null">
        loginname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="phonePrefix != null">
        phone_prefix,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="domicileLocation != null">
        `domicile _location`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phonePrefix != null">
        #{phonePrefix,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="domicileLocation != null">
        #{domicileLocation,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ecoding.limesiauth.entity.po.TBUserExample" resultType="java.lang.Long">
    select count(*) from t_b_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_b_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null">
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.phonePrefix != null">
        phone_prefix = #{record.phonePrefix,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.domicileLocation != null">
        `domicile _location` = #{record.domicileLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_b_user
    set id = #{record.id,jdbcType=INTEGER},
      realname = #{record.realname,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      loginname = #{record.loginname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      phone_prefix = #{record.phonePrefix,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      `domicile _location` = #{record.domicileLocation,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      enable = #{record.enable,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ecoding.limesiauth.entity.po.TBUser">
    update t_b_user
    <set>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phonePrefix != null">
        phone_prefix = #{phonePrefix,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="domicileLocation != null">
        `domicile _location` = #{domicileLocation,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ecoding.limesiauth.entity.po.TBUser">
    update t_b_user
    set realname = #{realname,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      phone_prefix = #{phonePrefix,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      `domicile _location` = #{domicileLocation,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      department_id = #{departmentId,jdbcType=INTEGER},
      enable = #{enable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into t_b_user
    (realname, nickname, loginname, password, phone, phone_prefix, address, `domicile _location`, 
      sex, department_id, enable, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.realname,jdbcType=VARCHAR}, #{item.nickname,jdbcType=VARCHAR}, #{item.loginname,jdbcType=VARCHAR}, 
        #{item.password,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.phonePrefix,jdbcType=INTEGER}, 
        #{item.address,jdbcType=VARCHAR}, #{item.domicileLocation,jdbcType=VARCHAR}, #{item.sex,jdbcType=BIT}, 
        #{item.departmentId,jdbcType=INTEGER}, #{item.enable,jdbcType=BIT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into t_b_user (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'realname'.toString() == column.value">
          #{item.realname,jdbcType=VARCHAR}
        </if>
        <if test="'nickname'.toString() == column.value">
          #{item.nickname,jdbcType=VARCHAR}
        </if>
        <if test="'loginname'.toString() == column.value">
          #{item.loginname,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'phone'.toString() == column.value">
          #{item.phone,jdbcType=VARCHAR}
        </if>
        <if test="'phone_prefix'.toString() == column.value">
          #{item.phonePrefix,jdbcType=INTEGER}
        </if>
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'domicile _location'.toString() == column.value">
          #{item.domicileLocation,jdbcType=VARCHAR}
        </if>
        <if test="'sex'.toString() == column.value">
          #{item.sex,jdbcType=BIT}
        </if>
        <if test="'department_id'.toString() == column.value">
          #{item.departmentId,jdbcType=INTEGER}
        </if>
        <if test="'enable'.toString() == column.value">
          #{item.enable,jdbcType=BIT}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>